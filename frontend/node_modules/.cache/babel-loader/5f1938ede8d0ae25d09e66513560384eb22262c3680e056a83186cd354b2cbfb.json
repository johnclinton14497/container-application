{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/frontend/src/ApiCall.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ApiCall = () => {\n  _s();\n  // Create a state variable to store the API response\n  const [data, setData] = useState([]);\n\n  // Use the useEffect hook to call the API on mount\n  useEffect(() => {\n    // Get the backend URI from the environment variable\n    const backendUri = process.env.REACT_APP_BACKEND_URI;\n\n    // Log the backend URI to verify it's correct\n    console.log(\"Backend URI:\", backendUri);\n\n    // Make the API call\n    axios.get(backendUri + \"/api/data\").then(response => {\n      // Log the response data to verify it's correct\n      console.log(\"Response Data:\", response.data);\n      setData(response.data);\n    }).catch(error => {\n      // Log any errors\n      console.error(\"Error fetching data:\", error);\n    });\n  }, []);\n\n  // Print the API response in a proper format\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"API Response\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: data.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: item.name\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(ApiCall, \"IEMTtLVFIuToo7X/raQbJAxzNQU=\");\n_c = ApiCall;\nexport default ApiCall;\nvar _c;\n$RefreshReg$(_c, \"ApiCall\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","ApiCall","_s","data","setData","backendUri","process","env","REACT_APP_BACKEND_URI","console","log","get","then","response","catch","error","children","fileName","_jsxFileName","lineNumber","columnNumber","map","item","index","name","_c","$RefreshReg$"],"sources":["/home/ubuntu/frontend/src/ApiCall.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nconst ApiCall = () => {\n  // Create a state variable to store the API response\n  const [data, setData] = useState([]);\n\n  // Use the useEffect hook to call the API on mount\n  useEffect(() => {\n    // Get the backend URI from the environment variable\n    const backendUri = process.env.REACT_APP_BACKEND_URI;\n\n    // Log the backend URI to verify it's correct\n    console.log(\"Backend URI:\", backendUri);\n\n    // Make the API call\n    axios.get(backendUri + \"/api/data\")\n      .then((response) => {\n        // Log the response data to verify it's correct\n        console.log(\"Response Data:\", response.data);\n        setData(response.data);\n      })\n      .catch((error) => {\n        // Log any errors\n        console.error(\"Error fetching data:\", error);\n      });\n  }, []);\n\n  // Print the API response in a proper format\n  return (\n    <div>\n      <h1>API Response</h1>\n      <ul>\n        {data.map((item, index) => (\n          <li key={index}>{item.name}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default ApiCall;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB;EACA,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;;EAEpC;EACAC,SAAS,CAAC,MAAM;IACd;IACA,MAAMQ,UAAU,GAAGC,OAAO,CAACC,GAAG,CAACC,qBAAqB;;IAEpD;IACAC,OAAO,CAACC,GAAG,CAAC,cAAc,EAAEL,UAAU,CAAC;;IAEvC;IACAP,KAAK,CAACa,GAAG,CAACN,UAAU,GAAG,WAAW,CAAC,CAChCO,IAAI,CAAEC,QAAQ,IAAK;MAClB;MACAJ,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEG,QAAQ,CAACV,IAAI,CAAC;MAC5CC,OAAO,CAACS,QAAQ,CAACV,IAAI,CAAC;IACxB,CAAC,CAAC,CACDW,KAAK,CAAEC,KAAK,IAAK;MAChB;MACAN,OAAO,CAACM,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,oBACEf,OAAA;IAAAgB,QAAA,gBACEhB,OAAA;MAAAgB,QAAA,EAAI;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrBpB,OAAA;MAAAgB,QAAA,EACGb,IAAI,CAACkB,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACpBvB,OAAA;QAAAgB,QAAA,EAAiBM,IAAI,CAACE;MAAI,GAAjBD,KAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAiB,CAChC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAAClB,EAAA,CApCID,OAAO;AAAAwB,EAAA,GAAPxB,OAAO;AAsCb,eAAeA,OAAO;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}